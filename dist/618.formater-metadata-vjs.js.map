{"version":3,"file":"618.formater-metadata-vjs.js","mappings":"2JAYA,MCZsL,EDYtL,CACA,4BACA,OACA,KACA,YACA,cAEA,KACA,YACA,cAEA,OACA,YACA,YAGA,OACA,qBACA,kBACA,GAEA,UACA,qBACA,oCACA,GAEA,gBACA,OACA,SACA,2CACA,qEAEA,SACA,cACA,cAOA,2BAEA,mBACA,SACA,kBACA,eAEA,EACA,mBACA,4BACA,EACA,qBACA,EACA,mBAIA,EAEA,SACA,0BACA,iBACA,QACA,2CAEA,EACA,uBACA,yCACA,uBACA,sBACA,EACA,2BACA,sBACA,uDACA,oBACA,EACA,yBAIA,0CAEA,uCASA,aAPA,6CACA,uBACA,2CACA,qBACA,2FAGA,qBACA,SACA,uCAEA,oBACA,cACA,QAEA,YAEA,kBAIA,EACA,kCACA,aAKA,IACA,6CACA,oCACA,sDAEA,mCACA,iBACA,cACA,kEAGA,wBACA,4CACA,sCAfA,MAFA,wCAkBA,EACA,0CACA,kCAEA,4DACA,kBACA,MACA,4CACA,8CANA,CAUA,iBACA,OACA,kEACA,MACA,SACA,2EACA,MACA,SACA,4EACA,MACA,QACA,sDAEA,wCAdA,CAeA,EACA,+BACA,SACA,OACA,KAaA,GAZA,gCACA,OACA,qCAEA,qBACA,wCACA,iDAEA,IACA,wBACA,MAEA,aACA,wBAEA,gBAEA,eACA,qCAEA,iBACA,yCAEA,iBACA,yCAEA,oEACA,wCACA,EAwEA,4BAKA,IAJA,uBACA,UACA,eAEA,QACA,wBACA,aACA,uBACA,qBAEA,CAgGA,GA7FA,qBACA,mDAEA,aACA,gDAEA,kBACA,mDAEA,WACA,2CAEA,aACA,gDAEA,YACA,4CAEA,SACA,kBAEA,cACA,sCACA,aAEA,6BAKA,oBACA,yCAEA,4CAKA,YACA,0BAEA,cACA,wEACA,qBACA,kBACA,qBAEA,IAEA,wBACA,kBACA,aACA,aAEA,8CACA,YACA,gDACA,WACA,GACA,cACA,YACA,mBACA,WACA,YACA,YAEA,gBACA,KAEA,+CACA,aACA,eAEA,6CAGA,YAEA,gBACA,kBAGA,6EACA,YACA,eACA,QACA,aACA,eACA,mCACA,iBAIA,SAEA,IADA,qBACA,KAEA,kCAWA,gCAMA,uBAIA,6DAKA,2DAKA,yDAKA,yDACA,kCACA,sBANA,mCACA,sBANA,sCACA,sBANA,uCACA,qBALA,qBANA,6CACA,gCACA,sBAbA,aACA,eAEA,iBACA,wBACA,+BAEA,qBAmCA,2BACA,OAGA,CAmCA,GAjCA,wBACA,aACA,eAEA,kCACA,iBACA,WACA,gBACA,cAEA,WACA,+BAEA,2BACA,WACA,aAEA,qCACA,mCACA,kBACA,WACA,iBAGA,8BACA,wCACA,yBACA,WACA,0BACA,mBACA,UAGA,aACA,qCACA,oBACA,sCACA,oBACA,wBACA,wBACA,mDACA,kBACA,CAqBA,GAPA,aACA,aACA,gCACA,sBACA,WACA,YAEA,cACA,SACA,kCACA,YACA,kBAEA,IACA,aACA,YAEA,CAIA,OAHA,YACA,cAEA,CACA,EAoBA,mBACA,mBACA,0DACA,yBACA,I,cElgBA,MClBmL,EDkBnL,CACA,0BACA,YACA,sBEdgB,OACd,GCRW,WAA+C,OAAOA,EAA5BC,KAAYC,MAAMF,IAAa,MACtE,GACsB,IDSpB,EACA,KACA,KACA,MAI8B,SFKhC,OACA,UACA,YACA,cAEA,KACA,YACA,cAEA,MACA,YACA,cAEA,OACA,YACA,cAEA,SACA,YACA,eAGA,OACA,oBACA,iCACA,4FACA,qIAEA,GAEA,mBAGA,WACA,EACA,mBAEA,EACA,qBAEA,EAEA,gBACA,OAEA,SACA,mBACA,qBAIA,qBAGA,gBAEA,EACA,SACA,+BACA,mBACA,KASA,OARA,YACA,gBACA,qBACA,mBACA,YACA,IAEA,uBACA,IACA,EACA,2BACA,yCACA,kBACA,MACA,mDACA,YACA,kDAGA,OAFA,4CACA,kBAGA,iBACA,GAEA,EACA,oCACA,gCACA,4EACA,kBACA,MACA,mDACA,gCAEA,MACA,0CACA,oBAEA,EACA,+BACA,IA/GuBG,EAAQC,EA+G/B,uCAEA,GAjHuBD,EAiHvB,EAjH+BC,EAiH/B,EAhHA,iCAEA,OADA,oBACA,QACA,KA+GA,yBACA,4BAGA,eAIA,OACA,OACA,+BAGA,GAIA,oBAJA,GAKA,wDACA,OAKA,gCACA,IACA,gCAEA,qCACA,IACA,4BAEA,qCACA,IACA,4BAEA,sDAIA,GAHA,eACA,kDAEA,cAGA,eAEA,IADA,SACA,mBACA,mCAEA,aACA,+BACA,GAaA,gCACA,yBAtBA,CAnCA,MAFA,2BA6DA,EACA,8BAEA,IADA,SACA,mBACA,uCACA,2BACA,iBACA,oCACA,uBACA,aACA,8BACA,uBACA,YAGA,qCACA,EACA,sCACA,IACA,GADA,eACA,8BACA,uDACA,qCACA,OAYA,GAVA,uBACA,0FACA,iGACA,IACA,EADA,2BACA,4BACA,oBACA,IAEA,CACA,IACA,GAGA,IACA,EADA,2BACA,4BACA,SAGA,cAMA,IAJA,wDAEA,4CAEA,oBACA,iCACA,oBAEA,oBAEA,OADA,cACA,OACA,KAVA,KAYA,wBAGA,CAKA,oIAtBA,CAPA,CA8BA,IIjPA,GAXgB,OACd,GCRW,WAAkB,IAAIC,EAAIJ,KAAKD,EAAGK,EAAIH,MAAMF,GAAG,OAAQK,EAAIC,IAAKN,EAAG,yBAAyB,CAACO,MAAM,CAAC,IAAMF,EAAIC,IAAI,IAAMD,EAAIG,IAAI,MAAQH,EAAII,SAASJ,EAAIK,IACtK,GACsB,IDSpB,EACA,KACA,KACA,MAI8B,O","sources":["webpack://formater-metadata-vjs/src/components/formater-api-requester.vue","webpack://formater-metadata-vjs/./src/components/formater-api-requester.vue?a3e9","webpack://formater-metadata-vjs/src/components/formater-opensearch.vue","webpack://formater-metadata-vjs/./src/components/formater-opensearch.vue?68a2","webpack://formater-metadata-vjs/./src/components/formater-api-requester.vue?49b5","webpack://formater-metadata-vjs/./src/components/formater-api-requester.vue","webpack://formater-metadata-vjs/./src/components/formater-opensearch.vue?b5d0","webpack://formater-metadata-vjs/./src/components/formater-opensearch.vue"],"sourcesContent":["/**\n * use geonetwork q-search service \n * @see https://geonetwork-opensource.org/manuals/trunk/eng/users/api/q-search.html\n * \n * use opensearch api with extension geo, time, and eo\n * @see http://www.opensearch.org/Home\n * \n */\n \n<template></template>\n<script>\n\nexport default {\n  name: 'FormaterApiRequester',\n  props: {\n    api: {\n      type: String,\n      default: null\n    },\n    cds: {\n      type: String,\n      default: null\n    },\n    depth: {\n      type: Number,\n      default: 1\n    }\n  },\n  watch: {\n    $route (newroute, old) {\n      this.getRecords(newroute)\n    }\n  },\n  computed: {\n    isFlatsim () {\n      return this.api.indexOf('flatsim') > 0\n    }\n  },\n  data() {\n    return {\n      headers: {\n        'Accept': 'application/json, text/plain, */*',\n        'Accept-Language': this.$store.state.lang === 'fr' ? 'fre,eng': 'eng,fre'\n      },\n      first: true,\n      dimensions: [],\n      parameters: {},\n//       changePageListener:null,\n//       temporalChangedListener: null,\n//       spatialChangedListener: null,\n//       dimensionChangedListener: null,\n//       textChangedListener: null,\n//       selectChangedListener: null,\n      closeMetadataListener: null,\n      // listen a global reset event\n      resetListener: null,\n      facet: [],\n      type: 'opensearch',\n      credentials: {}\n     }\n  },\n  created () {\n    this.getRecords(this.$route)\n  },\n  destroyed () {\n },\n  mounted () {\n//     this.facet.facetFormaterFre = []\n//     this.facet.facetFormaterFre.push('https%3A%2F%2Fw3id.org%2Fformater%2Fvariable%2Fsolid_earth/https%3A%2F%2Fw3id.org%2Fformater%2Fvariable%2Fgeothermal/https%3A%2F%2Fw3id.org%2Fformater%2Fvariable%2Fgeothermal-geothermal_temperature')\n//     this.facet.facetFormaterFre.push( 'https%3A%2F%2Fw3id.org%2Fformater%2Fvariable%2Fsolid_earth/https%3A%2F%2Fw3id.org%2Fformater%2Fvariable%2Fnon_solid/https%3A%2F%2Fw3id.org%2Fformater%2Fvariable%2Fnon_solid-hydrogen_gas')  \n    // url=\"http://demo.formater/geonetwork/srv/fre/qi?_content_type=json&bucket=2365825987452666&fast=index&from=1&to=41\"\n  },\n  methods: {\n    initParameters () {\n      this.parameters = {\n        index: 1,\n        maxRecords: this.$store.state.size.nbRecord\n      }\n    }, \n    getRecords (newroute) {\n      this.$store.commit('searchingChange', true)\n      this.prepareRequest(newroute)\n      this.requestApi(event)\n    },\n   prepareRequest(newroute) {\n      this.initParameters()\n      this.parameters = Object.assign(this.parameters, newroute.query)\n      this.mapParameters()\n    },\n    mapParameters() {\n      // transform the name of parameter from this application to the opensearch api for the predefined parameter\n      // or test if it is an opensearch parameter\n      // paramaters specific to api opensearch\n      var specificParameters = this.$store.state.parameters.others\n      // parameters mapping with our app parameters\n      var mappingParameters = this.$store.state.parameters.mapping\n      // change \n      this.parameters.renameProperty('bbox', mappingParameters['box'])\n      if (this.parameters.from) {\n        this.parameters['index'] = this.parameters.from\n        if (this.parameters.to) {\n          this.parameters['maxRecords'] = parseInt(this.parameters.to) - parseInt(this.parameters.from) + 1\n        }\n      }\n      for(var name in this.parameters){\n        if (typeof mappingParameters[name] !== 'undefined') {\n          this.parameters.renameProperty(name, mappingParameters[name])\n        } else  {\n          var isSpecific = specificParameters.find(function (obj) {\n            if (obj.name === name) {\n              return true\n            }\n          })\n          if (!isSpecific) {\n            delete this.parameters[name]\n          }\n        } \n      }\n    },\n    requestApi (depth) {\n\t\t  if (!this.api) {\n\t\t    this.$store.commit('searchingChange', false)\n\t\t    return\n\t\t  }\n      // var depth = (typeof this.parameters.depth != 'undefined') ? this.parameters.depth : this.depth\n      var self = this\n      var url = this.api + (this.api.indexOf('?') > 0 ? '&' :'?');\n      var parameters = Object.assign({}, this.parameters)\n      parameters = Object.assign(parameters, this.$store.state.parameters.fixed)\n      // register parameters value\n       url += Object.keys(parameters).map(function (prop) {\n        return prop + '=' + parameters[prop]\n      }).join('&');\n      this.$emit('registerValues', {depth: depth, parameters: this.parameters})\n     // this.$store.commit('addValueToParameters', this.parameters)\n    \n     this.$http.get(url).then(\n          response => {   this.treatmentGeojson(response.body, depth);},\n          response => { this.treatmentError(response, url, depth); })\n    },\n    treatmentError (response, url, depth) {\n     if (response && this.$store.state.proxy.url) {   \n     // if (response && this.$store.state.env === 'development' && this.$store.state.proxy.url) {\n        var url = this.$store.state.proxy.url + '?url=' + encodeURIComponent(url)\n        this.$http.get(url)\n        .then(\n            response => { this.treatmentGeojson(response.body, depth);},\n            response => { this.treatmentError(null, url, depth);}\n         )\n         return\n      }\n      switch(response.status) {\n      case 0:\n        this.$store.commit('setError', 'Maybe CORS ERROR, try with proxy')\n        break;\n      case 403:\n        this.$store.commit('setError', 'SERVER RESPONSE FOR ' + url + ' : ACCESS DENIED')\n        break;\n      case 404:\n        this.$store.commit('setError', 'SERVER RESPONSE FOR ' + url + ' : PAGE NOT FOUND')\n        break;\n      default:\n        this.$store.commit('setError', 'UNKNOWN ERROR FOR ' + url)\n      }\n      this.$store.commit('searchingChange', false)\n    },\n    treatmentGeojson (data, depth) {\n      var metadatas = {}\n      var self = this\n      var features = []\n      data.features.forEach( function (feature) {\n        if (!feature.id) {\n          feature.id = feature.properties.productIdentifier\n        }\n        feature.properties.id = feature.id\n        metadatas[feature.id] =  self.mapToGeonetwork(feature.properties)\n        features.push({type: feature.type, id: feature.id, geometry: feature.geometry})\n       \n      })\n      if (data.features.length === 0) {\n        metadatas = {}\n      }\n      if (data.properties) {\n        var properties = data.properties\n      } else {\n        var properties = data.description\n      }\n      if (properties.startIndex) {\n        properties.startIndex = parseInt(properties.startIndex)\n      }\n      if (properties.totalResults) {\n        properties.totalResults = parseInt(properties.totalResults)\n      }\n      if (properties.itemsPerPage) {\n        properties.itemsPerPage = parseInt(properties.itemsPerPage)\n      }\n      this.fill({ type: 'opensearch', properties: properties, features: features, metadata:metadatas}, depth)\n      this.$store.commit('searchingChange', false)\n    },\n   \n    // remove groupOwner if only one group choose in app parameters\n//     treatmentDimension (dimensions) {\n//       if (this.$store.state.group.length === 1) {\n//         if (!dimensions) {\n//           dimensions = []\n//         } else if (!Array.isArray(dimensions)) {\n//           dimensions = [dimensions]\n//         }\n//         var find = dimensions.findIndex(function (dimension) {\n//           return dimension['@name'] === 'groupOwner'\n//         })\n//         if (find >= 0) {\n//           dimensions.splice(find, 1)\n//         }\n//       }\n//     },\n//     searchGnStep2Parameters (dimension) {\n//       if (this.first) {\n//         // register dimension in store\n//         if (this.depth === 0) {\n//           this.$store.commit('gnParametersChange', {step:1, dimension: dimension})\n//         }\n//         // this.$store.commit('gnParametersChange', {step:2, dimension:[]})\n//         // search summary for all record (including child dataset) for step 2\n//         if (this.$store.state.summaryType.step1 !== this.$store.state.summaryType.step2) {\n          \n//           // var depth = (typeof this.parameters.depth != 'undefined') ? this.parameters.depth : this.depth\n//           var headers =  {\n//               'Accept': 'application/json, text/plain, */*',\n//               'Accept-Language': this.$i18n.locale === 'fr' ? 'fre': 'eng'\n//            }\n//           var parameters = {\n//               _content_type: 'json',\n//               from:1,\n//               to: 9,\n//               type: 'dataset+or+series+or+publications',\n//               resultType: this.$store.state.summaryType.step2\n//           }\n//           var url = this.srv + 'q?' + Object.keys(parameters).map(function (prop) {\n//             return prop + '=' + parameters[prop]\n//           }).join('&');\n//           this.$http.get(url, {headers: headers}).then(\n//             response => {  this.addGnParameters(response.body);}\n//           )\n//           this.first = false\n//         }\n//       }\n//     },\n//     addGnParameters(data) {\n//       this.$store.commit('gnParametersChange', {step:2, dimension:data.summary.dimension})\n//     },\n//     updateGeonetworkContacts (data) {\n//       data.responsibleParty.forEach( function (contact)  {\n//           var fields = contact.split('|');\n//           if (fields[1] === 'metadata' || fields[1] === 'metadonnées') {\n//            if (_this.contacts.metadata[fields[0]]){\n//              _this.contacts.metadata[fields[0]].push(fields)\n//            } else {\n//              _this.contacts.metadata[fields[0]] = [fields]\n//            }\n//           }else{\n//             if (_this.contacts.resource[fields[0]]){\n//                _this.contacts.resource[fields[0]].push(fields)\n//             } else {\n//                _this.contacts.resource[fields[0]] = [fields]\n//             }\n//           }\n                \n//       })\n//     },\n    mapToGeonetwork (properties) {\n      var properties = Object.assign({}, properties)\n      properties.fromOs = true\n      properties.cds = this.cds\n      // case Terradue\n      if (properties.date) {\n        var dates = properties.date.split('/')\n        if (dates.length > 1) {\n          properties.tempExtentBegin = dates[0]\n          properties.tempExtentEnd = dates[1]\n        }\n      }\n      \n      // case Flatsim\n      if (properties.productIdentifier) {\n        properties.renameProperty('productIdentifier', 'identifier')\n      }\n      if (properties.startDate) {\n        properties.renameProperty('startDate', 'tempExtentBegin')\n      }\n      if (properties.completionDate) {\n        properties.renameProperty('completionDate', 'tempExtentEnd')\n      }\n      if (properties.updated) {\n        properties.renameProperty('updated', 'revisionDate')\n      }\n      if (properties.published) {\n        properties.renameProperty('published', 'publicationDate')\n      }\n      if (properties.produced) {\n        properties.renameProperty('produced', 'creationDate')\n      }\n      if (!properties.type) {\n        properties.type = 'dataset'\n      }\n      if (properties.quicklook) {\n        properties.images = [['', properties.quicklook, '']]\n        delete properties.quicklook\n      }\n      if (properties.license && !this.isFlatsim) {\n        // @todo a effacer\n//         if (properties.license.licenseId === 'unlicensed' && this.isFlatsim) {\n//           properties.legalConstraints = ['license: https://creativecommons.org/licenses/by-nc/4.0/']\n//         } else {\n          if (properties.license.licenseId) {\n             properties.legalConstraints = [properties.license.licenseId]\n          } else {\n            properties.legalConstraints = ['License: ' + properties.license]\n          }\n       // }\n       // delete properties.license\n      }\n     if (properties.created) {\n      properties.creationDate = properties.created\n     }\n     if (properties.parameters) {\n      var props =  ['rlooksIn', 'rlooksUnw', 'digitalElevationModel', 'unwrapMethod', 'swath']\n      props.forEach(function (key) {\n        if (properties.parameters[key]) {\n          properties[key] = properties.parameters[key]\n        }\n      })\n     }\n     console.log(properties.rlooksIn)\n      properties.osParameters = []\n      properties.mapping = []\n      if (properties.services) {\n        // @todo cas très très particulier de flatsim\n        if(properties.services.browse && properties.services.browse.layers) {\n          properties.layers = []\n          properties.services.browse.layers.forEach(function (flatsimLayer, index) {\n            var type =  flatsimLayer.type\n            var layer = {\n                id: properties.id + '_' + index,\n                name: flatsimLayer.name,\n                description:  flatsimLayer.name,\n                href: flatsimLayer.url,\n                type: flatsimLayer.type,\n                checked: false\n            }\n            properties.layers.push(layer)\n          })\n        }\n        if(properties.services.download && properties.services.download.url) {\n          if (!properties.download) {\n            properties.download = []\n          }\n          properties.download.push(properties.services.download)\n          \n        }\n        delete properties.services\n      }\n      if( !properties.exportLinks) {\n        properties.exportLinks = {}\n      }\n      //case terradue\n      if (properties.offering && properties.offering.operation && properties.offering.operation['@code'] === 'GetMap') {\n        properties.layers = [] \n        properties.layers.push({\n             id: properties.id,\n             name: properties.title,\n             description: '',\n             href: properties.offering.operation['@href'],\n             type: 'GetMap'\n         })\n      }\n      // @todo Flatsim cas particulier des LIENS D'EXPORT qui se trouve dans link\n      if (properties.links) {\n        var i = properties.links.length\n        while (i--) {\n          // case terradue\n          if (properties.links[i]['@title'] === 'Download') {          \n            if (!properties.download) {\n              properties.download = []\n            }\n            properties.download.push({\n              url: properties.links[i]['@href'],\n              mimeType: properties.links[i]['@type']\n            })\n            properties.links.splice(i, 1)\n            continue\n          }\n          if (properties.links[i]['@title'] === 'Browse') {\n            properties.images = [['Browse', properties.links[i]['@href'], '']]\n            properties.thumbnail = properties.links[i]['@href']\n            properties.links.splice(i, 1)\n            continue\n          }\n          if (properties.links[i].rel === 'via') {\n            properties.links.splice(i, 1)\n            continue\n          }\n          if (properties.links[i]['@type'] === 'application/json' && !properties.exportLinks.json) {\n            properties.exportLinks.json = properties.links[i]['@href']\n            properties.links.splice(i,1)\n            continue\n          }\n          if (properties.links[i]['@type'] === 'application/xml' && !properties.exportLinks.xml) {\n            properties.exportLinks.xml = properties.links[i]['@href']\n            properties.links.splice(i,1)\n            continue\n          }\n          if (properties.links[i].type === 'application/json' && !properties.exportLinks.json) {\n            properties.exportLinks.json = properties.links[i].href\n            properties.links.splice(i,1)\n            continue\n          }\n          if (properties.links[i].type === 'application/xml' && !properties.exportLinks.xml) {\n            properties.exportLinks.xml = properties.links[i].href\n            properties.links.splice(i,1)\n            continue\n          }\n          \n        }\n        if (properties.links.length === 0) {\n          delete properties.links\n        }\n        // \n      }\n      // case gdm-sar-in\n      if (properties.links && properties.links.data) {\n        if (!properties.download) {\n            properties.download = []\n         }\n         properties.links.data.forEach(function (link) {\n            properties.download.push({\n              url: link.href,\n              mimeType: link.type,\n              name: link.title\n            })\n         })\n         delete properties.links.closeMetadataListener\n      }\n      if (properties.links && properties.links.preview) {\n           if (!properties.images) {\n              properties.images = []\n           }\n           properties.links.preview.forEach(function (link) {\n              properties.images.push([link.title, link.href, ''])\n              properties.thumbnail = link.href\n           })\n           delete properties.links.preview\n      }\n\n      if (properties.links && properties.links.alternates) {\n        properties.links.alternates.forEach(function (link) {\n          properties.exportLinks.json = link.href\n        })\n        delete properties.links.alternates\n        delete properties.links.via\n        delete properties.links\n      }\n     \n      if (!properties.contacts) {\n        properties.contacts = {metadata: {}, resource: {}}\n        if (properties.organisationName) {\n          if (typeof properties.organisationName === 'string') {\n            var responsible = new Array(10)\n            responsible[0] = 'Point of contact'\n            responsible[2] = properties.organisationName\n            properties.contacts.metadata['Point of contact'] = [responsible]\n            delete properties.organisationName\n          }\n        }\n      }\n     /* if (properties.keywords) {\n        properties.keywordGroup = {}\n        properties.keywords.forEach(function (keyword) {\n          if (!properties.keywordGroup[keyword.type]) {\n            properties.keywordGroup[keyword.type] = [{value: keyword.name}]\n          } else {\n            properties.keywordGroup[keyword.type].push({value: keyword.name})\n          }\n        })\n        delete properties.keywords\n      }*/\n      if (properties.keywords) {\n        properties.keyword = []\n        properties.keywords.forEach(function (keyword) {\n          properties.keyword.push(keyword.name)\n        })\n        delete properties.keywords\n      }\n      if (properties.categories) {\n        var keyword = []\n        properties.categories.forEach(function (kw) {\n          if (kw['@term']) {\n            keyword.push(kw['@term'])\n          }\n        })\n        if (keyword.length > 0) {\n          properties.keyword = keyword\n        }\n      }\n      if (!properties.keyword) {\n        properties.keyword = []\n      }\n      return properties\n    },\n    // @todo DEPLACER DANS FORM VOIR MÊME DANS formater-dimension-block/ formater-facet-block!!\n//     prepareFacet (e) {\n//       var facet = ''\n     \n//       for(var key in e.detail.facet) {\n//         if (e.detail.facet[key].length > 0) {\n//           if (facet === '') {\n//             facet = key +'/' + e.detail.facet[key]\n//           } else {\n//             facet += '&' + key + '/' + e.detail.facet[key]\n//           }\n//         }\n//       }\n//       if (facet !== '') {\n//        e.detail['facet.q'] = encodeURIComponent(facet)\n//        delete e.detail.facet\n//       }\n//       return e;\n//     },\n    fill (data, depth) {\n      data.depth = this.depth\n      var event = new CustomEvent('fmt:metadataListEvent', {detail:  data})\n      document.dispatchEvent(event)\n    },\n//     handleReset () {\n//       var event = new CustomEvent('aerisResetEvent', {detail: {}})\n//       document.dispatchEvent(event)\n//       this.getRecords({detail: {depth:event.detail.depth}})\n//     },\n//     changePage (event) {\n//       this.getRecords(event)\n//     },\n//     changeSearch (event) {\n//       this.parameters.any = event.target.value\n//       this.getRecords()\n//     }\n  }\n}\n</script>\n","import mod from \"-!../../node_modules/babel-loader/lib/index.js!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./formater-api-requester.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../node_modules/babel-loader/lib/index.js!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./formater-api-requester.vue?vue&type=script&lang=js\"","/**\n * Tools to read the opensearch describe xml and extract the api and parameters \n * \n * @author epointal\n *\n **/\n \n<template>\n<formater-api-requester v-if=\"api\" :api=\"api\" :cds=\"cds\" :depth=\"depth\"></formater-api-requester>\n</template>\n<script>\nimport FormaterApiRequester from '@/components/formater-api-requester.vue'\nfunction getKeyByValue(object, value) {\n  return Object.keys(object).find(key => {\n    value = value.replace('?', '')\n    return object[key] === value\n  });\n}\nexport default {\n  name: 'FormaterOpensearch',\n  components: {\n    FormaterApiRequester\n  },\n  props: {\n    describe: {\n      type: String,\n      default: null\n    },\n    cds: {\n      type: String,\n      default: null\n    },\n    uuid: {\n      type: String,\n      default: null\n    },\n    depth: {\n      type: Number,\n      default: null\n    },\n    service: {\n      type: Object,\n      default: null\n    }\n  },\n  watch: {\n    service (newvalue) {\n      if (newvalue.domain.indexOf('flatsim') >= 0) {\n        this.osParameters = this.osParameters.filter(param => param.name !== 'processingLevel')\n        this.$emit('parametersChange', {api: this.api, parameters:this.osParameters, mapping: this.mappingParameters, fixed:this.fixedParameters})\n      }\n    }\n  },\n  created () {\n    // this.searchEventListener = this.handleSearch.bind(this) \n  \t// document.addEventListener('aerisSearchEvent', this.searchEventListener);\n    this.load()\n  },\n  mounted () {\n\n  },\n  destroyed () {\n//     document.removeEventListener('aerisSearchEvent', this.searchEventListener);\n//     this.searchEventListener = null\n  },\n  data () {\n    return {\n     // searchEventListener: null,\n      api: null,\n      fixedParameters: {},\n      paramNS: 'parameters',\n\n      // associative array of: parameter name in this application => name in the opensearch api\n      // for the predefined parameters like box, temporalExtent, and paging (common for all api)\n      mappingParameters: [],\n      // list of others specific opensearch api parameters \n      // { name, title, pattern, min, max, options}\n      osParameters: []\n    }\n  },\n  methods: {\n     extractFixedParams (describe) {\n       var tab = describe.split('?')\n       var fixedParameters = {}\n       if (tab.length > 1) {\n         var params = tab[1].split('&')\n         params.forEach(function (param) {\n           var x = param.split('=')\n           fixedParameters[x[0]] = x[1]\n         })\n       }\n       this.fixedParameters = fixedParameters\n       return tab[0]\n     },\n     load() {\n       var describe = this.extractFixedParams(this.describe)\n       this.$http.get(describe)\n       .then(\n           response => { this.extractDescribeParameters(response.body);},\n           response => { \n             if (response.status === 403 || response.status === 401 || response.status === 400) {\n               console.log('CAN NOT GET ' + this.describe)\n               this.$emit('failed')\n               return\n             }\n             this.loadWithProxy()\n           }\n        )\n    },\n    loadWithProxy() {\n      if (this.$store.state.proxy.url) {\n\t      var url = this.$store.state.proxy.url + '?url=' + encodeURIComponent(this.describe)\n\t      this.$http.get(url)\n\t      .then(\n\t          response => { this.extractDescribeParameters(response.body);},\n\t          response => { this.$emit('failed');}\n\t       )\n      } else {\n        console.log('CAN NOT GET ' + this.describe)\n        this.$emit('failed')\n      }\n    },\n    extractParameter (parameterNode, specName) {\n      var listPredefined = this.$store.getters['predefinedParams']\n      // name in this application\n      var appName = getKeyByValue(listPredefined, specName)\n      // name in the opensearch api\n      var name = parameterNode.getAttribute('name')\n      if (this.fixedParameters[name]) {\n        return\n      }\n      if (typeof appName !== 'undefined') {\n        this.mappingParameters[appName] = name\n        return\n      }\n      var obj= {\n          name: name,\n          title: parameterNode.getAttribute('title')\n      }\n      // particular cas\n      switch(name) {\n//         case 'relativeOrbitNumber':\n//           obj.title = obj.title || 'Ex: 123'\n//           break;\n        case 'processingLevel':\n          if (this.service && this.service.domain.indexOf('flatsim')>= 0) {\n             return;\n          }\n          break;\n      }\n      \n      var pattern = parameterNode.getAttribute('pattern')\n      if (pattern) {\n        obj = Object.assign(obj, {pattern: pattern})\n      }\n      var min = parameterNode.getAttribute('minInclusive')\n      if (min) {\n        obj= Object.assign(obj, {min: min})\n      }\n      var max = parameterNode.getAttribute('maxInclusive')\n      if (max) {\n        obj = Object.assign(obj, {max: max})\n      }\n      var nodes = parameterNode.getElementsByTagName(this.paramNS + ':Options')\n      if (nodes.length === 0) {\n        nodes = parameterNode.getElementsByTagName(this.paramNS + ':Option')\n      }\n      if (nodes.length === 1) {\n        return\n      }\n      if (nodes.length > 0) {\n        var options= []\n        for(var k=0; k < nodes.length; k++) {\n          options.push(nodes[k].getAttribute('value'))\n        }\n        if (options.length > 0)\n        obj = Object.assign(obj, {options: options})\n      }\n//      if (self.removedFields.indexOf(name) >=0) {\n        \n//       }else if (name.toLowerCase() === 'platform') {\n//         this.platform = obj\n//       } else if (name.toLowerCase() === 'q'){\n//         this.hasQ = true\n//      } else\n//         if (this.geographic.indexOf(name) >=0) {\n//         this.geoParameters.push(obj)\n//       } else if (this.paging.indexOf(name) >= 0) {\n//          this.pagingParameters.push(obj)\n//       }else \n      if (!obj.options || obj.options.length > 1) {\n        this.osParameters.push(obj)\n      }\n    },\n    extractNamespaces (attrs) {\n      var namespaces = {}\n      for (var i=0; i < attrs.length; i++) {\n        if (attrs[i].value.indexOf('parameters') > 0 ) {\n          var part = attrs[i].name.split(':')\n          this.paramNS =  part[1]\n        } else if (attrs[i].value.indexOf('time') > 0) {\n          var part = attrs[i].name.split(':')\n          namespaces.time = part[1]\n        } else if (attrs[i].value.indexOf('geo') > 0) {\n          var part = attrs[i].name.split(':')\n          namespaces.geo = part[1]\n        }\n      }\n      this.$store.commit('setNamespaces', namespaces)\n    },\n    extractDescribeParameters(parametersString) {\n      var parser = new DOMParser()\n      var xml = parser.parseFromString(parametersString, 'text/xml')\n      this.extractNamespaces(xml.firstElementChild.attributes)\n      var urls = xml.firstElementChild.childNodes\n      var url = null\n      // loop to find the good url\n      urls.forEach(function (node) {\n         if (node.tagName && node.tagName.toLowerCase() === 'url' && node.getAttribute('type').indexOf('json') >= 0\n             && node.getAttribute('type').indexOf('tdensity') < 0 && node.getAttribute('type').indexOf('elasticsearch') < 0) {\n           var template = node.getAttribute('template')\n           var extract = template.match(/^([^?]*(?:\\?)).*$/i)\n           if( extract && extract[1] && extract[1] != ''){\n               url = node;\n           }\n         }\n      })\n      if (!url)  {\n        return\n      }\n      var template = url.getAttribute('template')\n      var extract = template.match(/^([^?]*(?:\\?)).*$/i)\n      if (!extract[1]) {\n        return\n      } else {\n        this.api = extract[1]\n      }\n      var parameters = url.getElementsByTagName(this.paramNS + ':Parameter')\n      var self = this\n      var regexList = this.$store.state.parameters.excluedRegex\n      // loop on the parameters node\n      for(var i=0; i < parameters.length; i++){\n        var specName = parameters[i].getAttribute('value')\n        specName = specName.replace('?', '')\n        // search if the parameter is exclued (@see list in store/index.js)\n        var isExclued = regexList.some(function(str) {\n          var rx = new RegExp(str)\n          return rx.test(specName)\n        })\n        if (!isExclued) {\n          var obj = self.extractParameter(parameters[i] , specName)\n        }\n        \n      }\n//       console.log(this.osParameters)\n//       console.log(this.mappingParameters)\n//       console.log(this.fixedParameters)\n     // this.recordService()\n      this.$emit('parametersChange', {api: this.api, parameters:this.osParameters, mapping: this.mappingParameters, fixed: this.fixedParameters})\n    },\n    // record this service\n//     recordService() {\n//       // only if authenticate user\n//      // if (this.$store && this.$store.getters['user/email']) {\n//         this.$store.commit('services/add', this.api)\n//       // }\n//     },\n//     handleSearch(e) {\n//       if (this.api && e.detail.parentUuid === this.uuid) {\n//         e.detail.api = this.api\n//       }\n//     }\n  }\n}\n\n</script>\n\n","import mod from \"-!../../node_modules/babel-loader/lib/index.js!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./formater-opensearch.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../node_modules/babel-loader/lib/index.js!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./formater-opensearch.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./formater-api-requester.vue?vue&type=template&id=003bc90d\"\nimport script from \"./formater-api-requester.vue?vue&type=script&lang=js\"\nexport * from \"./formater-api-requester.vue?vue&type=script&lang=js\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c;return _c(\"div\")\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import { render, staticRenderFns } from \"./formater-opensearch.vue?vue&type=template&id=32236fce\"\nimport script from \"./formater-opensearch.vue?vue&type=script&lang=js\"\nexport * from \"./formater-opensearch.vue?vue&type=script&lang=js\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c;return (_vm.api)?_c('formater-api-requester',{attrs:{\"api\":_vm.api,\"cds\":_vm.cds,\"depth\":_vm.depth}}):_vm._e()\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }"],"names":["_c","this","_self","object","value","_vm","api","attrs","cds","depth","_e"],"sourceRoot":""}