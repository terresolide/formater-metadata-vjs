"use strict";(self.webpackChunkformater_metadata_vjs=self.webpackChunkformater_metadata_vjs||[]).push([[989],{7989:(t,e,i)=>{i.r(e),i.d(e,{default:()=>r});const s={name:"FormaterSensorthings",components:{},props:{url:{type:String,default:null},cds:{type:String,default:null},uuid:{type:String,default:null},depth:{type:Number,default:null},service:{type:Object,default:null}},watch:{$route:function(t){this.getRecords(t)},service:function(t){}},created:function(){this.extractParameters(),this.initParameters(),this.getRecords(this.$route)},mounted:function(){},destroyed:function(){},data:function(){return{parameters:{},fixedFilters:[],mappingParameters:[],osParameters:[]}},methods:{initParameters:function(){this.parameters={$skip:0,$top:this.$store.state.size.nbRecord,$expand:"Thing($expand=Locations($top=1)),Sensor,ObservedProperty"}},extractParameters:function(){console.log(this.url),this.api=this.url;var t=new URL(this.url),e=t.searchParams.get("$filter"),i=null;e&&(i=(i=e.split("and")).map((function(t){return t.trim()}))),this.fixedFilters=i,console.log(this.fixedFilters),this.api=t.protocol+"//"+t.host+t.pathname},getRecords:function(t){var e=this;this.$store.commit("searchingChange",!0),this.prepareParameters(t);var i=this.api+"?",s=Object.assign({},this.parameters);i+=Object.keys(s).map((function(t){return t+"="+encodeURIComponent(s[t])})).join("&"),this.$http.get(i).then((function(t){e.treatmentJson(t.body)}),(function(t){if(403===t.status||401===t.status||400===t.status)return console.log("CAN NOT GET "+e.describe),void e.$emit("failed");e.loadWithProxy()}))},loadWithProxy:function(){var t=this;if(this.$store.state.proxy.url){var e=this.$store.state.proxy.url+"?url="+encodeURIComponent(this.api);this.$http.get(e).then((function(t){console.log(t.body)}),(function(e){t.$emit("failed")}))}else console.log("CAN NOT GET "+this.describe),this.$emit("failed")},prepareFilters:function(t){console.log(t);var e=[];if(e=e.concat(this.fixedFilters),t.any&&e.push("substringof('"+t.any+"', name)"),t.box){var i=this.$box2sql(t.box);i&&e.push("geo.intersects(Thing/Locations/location,geography'"+i+"')")}if(t.start){var s=new Date;console.log(s.toJSON());var r=t.end?t.end+"T23:59:00Z":s.toJSON();e.push("overlaps(phenomenonTime,"+t.start+"T00:00:00Z/"+r+")")}t.end&&!t.start&&e.push("date(phenomenonTime) le date("+t.end+")"),e.length>0&&(this.parameters.$filter=e.join(" and ")),console.log(e)},prepareParameters:function(t){var e=t.query;e.from&&(this.parameters.$skip=parseInt(e.from)-1,e.to&&(this.parameters.$top=parseInt(e.to)-parseInt(e.from)+1)),this.prepareFilters(e)},treatmentJson:function(t){var e={},i=[],s=this,r={type:"sensorthings"};t.value.forEach((function(t){var r=t.Thing.Locations[0].location;r.id=t["@iot.id"]+"",r.title=t.Thing.Locations[0].name,r.properties||(r.properties={}),r.properties=Object.assign(r.properties,t.Thing.properties),i.push(r),e[t["@iot.id"]+""]=s.mapToGeonetwork(t),e[t["@iot.id"]+""].feature=r})),r.properties={count:t.value.length,itemsPerPage:this.parameters.$top,startIndex:this.parameters.$skip+1,next:t["@iot.nextLink"]?t["@iot.nextLink"]:null},r.depth=this.depth,r.features=i,r.metadata=e;var n=new CustomEvent("fmt:metadataListEvent",{detail:r});document.dispatchEvent(n),this.$store.commit("searchingChange",!1)},mapToGeonetwork:function(t){var e=t.properties;e.id=t["@iot.id"]+"",e.metaId=t["@iot.selfLink"],e.title=t.name,e.description=t.description;var i=t.phenomenonTime.split("/");e.tempExtentBegin=i[0],e.tempExtentEnd=i[1],e.type="dataset",e.cds=this.cds,e.keyword=[];var s=t.resultTime.split("/");return e.creationDate=s[0],e.updated=s[1],t.properties.img&&(e.images=[["Browse",t.properties.img,""]],e.thumbnail=t.properties.img,delete e.img),e.file&&(e.download=[{mimeType:"application/octet-stream",url:e.file}]),t.Sensor&&(console.log(t.Sensor),e.sensor=t.Sensor.metadata),e.exportLinks={json:t["@iot.selfLink"]},e.contacts={metadata:{},resource:{}},e}}},r=(0,i(1900).Z)(s,(function(){return(0,this._self._c)("div")}),[],!1,null,null,null).exports}}]);
//# sourceMappingURL=989.formater-metadata-vjs.js.map