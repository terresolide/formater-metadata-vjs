{"version":3,"sources":["webpack:///./src/formater-catalogue.vue?f67f","webpack:///./src/components/formater-requester.vue?eac8","webpack:///./src/components/formater-requester.vue?a5ba","webpack:///src/components/formater-requester.vue","webpack:///./src/components/formater-requester.vue","webpack:///./src/formater-catalogue.vue?0fc3","webpack:///./src/formater-catalogue.vue?44d8","webpack:///./src/formater-catalogue.vue?4f4c","webpack:///src/formater-catalogue.vue","webpack:///./src/formater-catalogue.vue"],"names":["module","exports","Component","options","__i18n","push","_Ctor","components_formater_requestervue_type_script_lang_js_","name","props","depth","type","Number","default","watch","$route","newroute","old","this","getRecords","data","srv","api","headers","Accept","Accept-Language","$store","state","lang","first","dimensions","parameters","changePageListener","temporalChangedListener","spatialChangedListener","dimensionChangedListener","textChangedListener","selectChangedListener","closeMetadataListener","resetListener","facet","credentials","created","geonetwork","$i18n","locale","destroyed","mounted","methods","initParameters","_content_type","fast","bucket","from","to","size","nbRecord","sortBy","orderBy","sortOrder","event","commit","prepareRequest","requestApi","createGeometry","bbox","split","north","south","east","west","box","route","resultType","summaryType","step2","parentUuid","params","uuid","isChild","step1","searchSimpleMetadata","_this2","$http","get","metadata","then","response","body","meta","$gn","treatmentMetadata","appRoot","CustomEvent","detail","document","dispatchEvent","_this3","Object","assign","query","renameProperty","geometry","self","gnParameters","forEach","key","group","_groupOwner","join","url","keys","map","prop","treatmentGeonetwork","treatmentError","status","treatmentGeojson","metadatas","features","feature","properties","id","mapToGeonetwork","length","description","fill","treatmentDimension","summary","dimension","extractBbox","geoBox","index","searchGnStep2Parameters","Array","isArray","find","findIndex","splice","_this4","step","addGnParameters","fromOs","productIdentifier","startDate","completionDate","updated","published","produced","quicklook","images","license","osParameters","mapping","services","browse","layers","flatsimLayer","layer","href","checked","download","exportLinks","links","i","json","xml","contacts","resource","organisationName","responsible","keywords","keyword","component","componentNormalizer","_h","$createElement","_self","_c","__webpack_exports__","_node_modules_intlify_vue_i18n_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_formater_catalogue_vue_vue_type_custom_index_0_blockType_i18n__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","_node_modules_intlify_vue_i18n_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_formater_catalogue_vue_vue_type_custom_index_0_blockType_i18n__WEBPACK_IMPORTED_MODULE_0___default","n","r","src_formater_cataloguevue_type_script_lang_js_","components","FormaterDrawBbox","formater_draw_bbox","FormaterForm","formater_form","FormaterListMetadata","formater_list_metadata","FormaterMetadata","e","bind","FormaterPaging","formater_paging","FormaterRequester","formater_requester","AerisTheme","aeris_theme","currentUuid","metaDisplayed","metadataListener","drawing","aerisSearchListener","aerisResetListener","backListener","temporalExtent","min","max","console","log","$router","replace","initTemporalExtent","keydownListener","checkEscape","addEventListener","removeEventListener","closeSingle","close","go","back","selectedMetadata","resetMetadata","window","keyCode","pop","disableType","tempExtentBegin","substring","tempExtentEnd","temp","madivx","setParameters","obj","registerValues","parameter","value","closeError","_vm","staticClass","_v","_s","attrs","disableLevel","$t","_e","on","click","error","$event","directives","rawName","expression","orders","order-by","_l","parametersChange","formater_cataloguevue_type_custom_index_0_blockType_i18n"],"mappings":"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","file":"6.formater-metadata-vjs.js","sourcesContent":["module.exports = function (Component) {\n  Component.options.__i18n = Component.options.__i18n || []\n  Component.options.__i18n.push('{\"en\":{\"searching\":\"Searching\"},\"fr\":{\"searching\":\"Recherche en cours\"}}')\n  delete Component.options._Ctor\n}\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\"div\")}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import mod from \"-!../../node_modules/babel-loader/lib/index.js!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./formater-requester.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/babel-loader/lib/index.js!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./formater-requester.vue?vue&type=script&lang=js&\"","/**\n * use geonetwork q-search service \n * @see https://geonetwork-opensource.org/manuals/trunk/eng/users/api/q-search.html\n * \n * use opensearch api with extension geo, time, and eo\n * @see http://www.opensearch.org/Home\n * \n */\n \n<template></template>\n<script>\n\n\nexport default {\n  name: 'FormaterRequester',\n  props: {\n    depth: {\n      type: Number,\n      default:0\n    }\n  },\n  watch: {\n    $route (newroute, old) {\n      this.getRecords(newroute)\n      \n    }\n  },\n  data() {\n    return {\n      srv: null,\n      api: null,\n      headers: {\n        'Accept': 'application/json, text/plain, */*',\n        'Accept-Language': this.$store.state.lang === 'fr' ? 'fre,eng': 'eng,fre'\n      },\n      first: true,\n      dimensions: [],\n      parameters: {},\n      changePageListener:null,\n      temporalChangedListener: null,\n      spatialChangedListener: null,\n      dimensionChangedListener: null,\n      textChangedListener: null,\n      selectChangedListener: null,\n      closeMetadataListener: null,\n      // listen a global reset event\n      resetListener: null,\n      facet: [],\n      type: 'geonetwork',\n      credentials: {}\n     }\n  },\n  created () {\n    if (this.$store.state.geonetwork) {\n       this.srv = this.$store.state.geonetwork +  'srv/' + (this.$i18n.locale === 'fr'? 'fre' : 'eng') + '/'\n       // this.srv = this.$store.state.geonetwork +  'srv/fre/'\n    }\n    this.getRecords(this.$route)\n    \n\n    // this.getRecords() done when <formater-paging> is mounted with its pageChangeEvent on order control change\n//     this.pageChangedListener = this.changePage.bind(this)\n//     document.addEventListener('fmt:pageChangedEvent', this.pageChangedListener);\n//     this.temporalChangedListener = this.getRecords.bind(this)\n//     document.addEventListener('temporalChangeEvent', this.temporalChangedListener);\n//     this.spatialChangedListener = this.getRecords.bind(this)\n//     document.addEventListener('fmt:spatialChangeEvent', this.spatialChangedListener);\n//     this.dimensionChangedListener = this.getRecords.bind(this);\n//     document.addEventListener('fmt:dimensionChangeEvent', this.dimensionChangedListener);\n//     this.textChangedListener = this.getRecords.bind(this);\n//     document.addEventListener('fmt:textChangeEvent', this.textChangedListener);\n//     this.selectChangedListener = this.getRecords.bind(this);\n//     document.addEventListener('fmt:selectChangeEvent', this.selectChangedListener)\n//      this.metadataWithChildListener = this.getRecords.bind(this)\n//     document.addEventListener('fmt:metadataWithChildEvent', this.metadataWithChildListener)\n//     this.closeMetadataListener = this.getRecords.bind(this)\n//      document.addEventListener('fmt:closeMetadataEvent', this.closeMetadataListener)\n//     this.resetListener = this.handleReset.bind(this);\n//      document.addEventListener('fmt:resetEvent', this.resetListener);\n  },\n  destroyed () {\n//     document.removeEventListener('fmt:pageChangedEvent', this.pageChangedListener);\n//     this.pageChangedListener = null;\n//     document.removeEventListener('temporalChangeEvent', this.temporalChangedListener);\n//     this.temporalChangedListener = null;\n//     document.removeEventListener('fmt:spatialChangeEvent', this.spatialChangedListener);\n//     this.spatialChangedListener = null;\n//     document.addEventListener('fmt:dimensionChangeEvent', this.dimensionChangedListener);\n//     this.dimensionChangedListener = null\n//     document.removeEventListener('fmt:textChangeEvent', this.textChangedListener)\n//     this.textChangedListener = null\n//     document.removeEventListener('fmt:selectChangeEvent', this.selectChangedListener)\n//     this.selectChangedListener = null\n//     document.removeEventListener('fmt:metadataWithChildEvent', this.metadataWithChildListener)\n//     this.metadataWithChildListener = null\n//      document.addEventListener('fmt:closeMetadataEvent', this.closeMetadataListener)\n//      this.closeMetadataListener = null\n//     document.addEventListener('fmt:resetEvent', this.resetListener);\n//     this.resetListener = null\n  },\n  mounted () {\n//     this.facet.facetFormaterFre = []\n//     this.facet.facetFormaterFre.push('https%3A%2F%2Fw3id.org%2Fformater%2Fvariable%2Fsolid_earth/https%3A%2F%2Fw3id.org%2Fformater%2Fvariable%2Fgeothermal/https%3A%2F%2Fw3id.org%2Fformater%2Fvariable%2Fgeothermal-geothermal_temperature')\n//     this.facet.facetFormaterFre.push( 'https%3A%2F%2Fw3id.org%2Fformater%2Fvariable%2Fsolid_earth/https%3A%2F%2Fw3id.org%2Fformater%2Fvariable%2Fnon_solid/https%3A%2F%2Fw3id.org%2Fformater%2Fvariable%2Fnon_solid-hydrogen_gas')\n   \n    // url=\"http://demo.formater/geonetwork/srv/fre/qi?_content_type=json&bucket=2365825987452666&fast=index&from=1&to=41\"\n  },\n  methods: {\n    initParameters () {\n        this.parameters = {\n          _content_type: 'json',\n           fast: 'index', // more quick\n        //  'facet.q': '',\n          bucket: 's101',\n          from: 1,\n          to: this.$store.state.size.nbRecord,\n          //  resultType: 'subtemplate',\n          // resultType: 'details',\n          sortBy: this.$store.state.orderBy,\n          sortOrder: 'ordering',\n          type:'dataset+or+series+or+publication'\n         }\n       \n    }, \n    getRecords (event) {\n      \n//       if (this.$store.state.metadata && this.first) {\n//         this.first = false\n//         this.searchSimpleMetadata()\n//         return\n//       }\n      this.$store.commit('searchingChange', true)\n      // trigger search event like breadcrumb\n//       if (event.detail && typeof event.detail.depth == 'number') {\n//         var depth = event.detail.depth\n//       } else {\n//         var depth = this.depth\n//       }\n//       var e = new CustomEvent(\"aerisSearchEvent\", { detail: {depth: depth}});\n//       document.dispatchEvent(e);\n     \n//       if (e.detail.api) {\n//         this.api = e.detail.api\n//         delete e.detail.api\n//         this.type = 'opensearch'\n        \n //     } else {\n        this.type = 'geonetwork'\n//      }\n\n      this.prepareRequest(event)\n      this.requestApi(event)\n    },\n//     prepareRequest (e) {\n//       switch (this.type) {\n//       case 'geonetwork':\n//         this.prepareRequestGeonetwork(e)\n//         break;\n//       case 'opensearch':\n//         this.prepareRequestOpensearch(e)\n//         break\n//       }\n//     },\n    createGeometry (bbox) {\n      var split = bbox.split(',')\n      var north = split[3]\n      var south = split[1]\n      var east = split[2]\n      var west = split[0]\n      var box = 'POLYGON((' + west + '+' + north + ','\n        box += east + '+' + north + ',';\n        box += east + '+' + south + ',';\n        box += west + '+' + south + ',';\n        box += west + '+' + north + '))';\n      return box;\n    },\n    prepareRequest(route) {\n      \n      this.initParameters()\n      \n      // delete e.detail.lang\n//       if (!e.detail.startDefault) {\n//         e.detail.renameProperty('start', 'extFrom')\n//       } else {\n//         delete e.detail.start\n//       }\n//       if (e.detail.endDefault) {\n//         delete e.detail.endDefault\n//         delete e.detail.end\n        \n//       } else {\n//         e.detail.renameProperty('end', 'extTo')\n//       }\n//       delete e.detail.startDefault\n//       delete e.detail.endDefault\n//       delete e.detail.box\n\n//      // delete e.detail.depth\n//       delete e.detail.recordPerPage\n     \n      if (route.name === 'Metadata') {\n       this.parameters.resultType = this.$store.state.summaryType.step2\n       this.parameters.parentUuid = route.params.uuid\n      } else {\n       this.parameters.isChild = false\n       this.parameters.resultType = this.$store.state.summaryType.step1\n      }\n//       if (e.detail.depth > 0) {\n//         // voir plutôt les key à éliminer centre de données, variable, instruments, gemet, types?\n//         for(var key in e.detail) {\n//           if (['any', 'geometry', 'extTo', 'extFrom', 'from', 'to', 'parentUuid', 'type'].indexOf(key) >=0){\n//             this.parameters[key] = e.detail[key]\n//           }\n//         }\n//       } else {\n        // this.prepareFacet(route)\n     \n        var _this = this\n\n    },\n//     prepareRequestOpensearch(e) {\n//       this.initParameters()\n//        if (e.detail.startDefault) {\n//         delete e.detail.start\n//       }\n//       if (e.detail.endDefault) {\n//         delete e.detail.end\n//       } \n//       this.mapParameters(e)\n//       this.parameters = Object.assign(this.parameters, e.detail)   \n\n//     },\n    searchSimpleMetadata() {\n      this.$http.get(this.$store.state.metadata).then(\n          response => {  \n            var data = response.body\n            var uuid = data['geonet:info'].uuid\n            var meta = this.$gn.treatmentMetadata(data, uuid);\n            // var feature = self.$gn.extractBbox(data.geoBox, uuid)\n            meta.appRoot = true\n            var event = new CustomEvent('fmt:metadataEvent', {detail: {meta:meta, depth: 0 } })\n            document.dispatchEvent(event)\n         }\n        )\n    },\n//     mapParameters(e) {\n//       // transform the name of parameter from this application to the opensearch api for the predefined parameter\n//       // or test if it is an opensearch parameter\n//       // paramaters specific to api opensearch\n//       var specificParameters = this.$store.state.parameters.others\n//       // parameters mapping with our app parameters\n//       var mappingParameters = this.$store.state.parameters.mapping\n//       for(var name in e.detail){\n        \n//         if (typeof mappingParameters[name] !== 'undefined') {\n//           e.detail.renameProperty(name, mappingParameters[name])\n//         } else  {\n//           var isSpecific = specificParameters.find(function (obj) {\n//             if (obj.name === name) {\n//               return true\n//             }\n//           })\n//           if (!isSpecific) {\n//             delete e.detail[name]\n//           }\n//         } \n//       }\n//     },\n//     requestApi (depth)  {\n//         switch (this.type) {\n//         case 'geonetwork':\n//           this.requestApiGeonetwork(depth)\n//           break;\n//         case 'opensearch':\n//           this.requestApiOpensearch(depth)\n//           break;\n//         }\n//     },\n    requestApi (route) {\n      if (!this.srv) {\n        return\n      }\n      // var depth = (typeof this.parameters.depth != 'undefined') ? this.parameters.depth : this.depth\n     \n     // delete this.parameters.depth\n      var headers =  {\n          'Accept': 'application/json, text/plain, */*',\n          'Accept-Language': this.$store.state.lang === 'fr' ? 'fre': 'eng'\n       }\n      this.parameters = Object.assign(this.parameters, route.query)\n      this.parameters.renameProperty('start', 'extFrom')\n      this.parameters.renameProperty('end', 'extTo')\n\n      if (this.parameters.box) {\n          this.parameters.geometry = this.createGeometry(this.parameters.box)\n          delete this.parameters.box\n      }\n      //first requête to type=me to record session and token\n//       this.$http.get('http://demo.formater/geonetwork/srv/fre/info?type=me', {credentials:true, headers: headers}).then(\n//           response => {console.log(response.headers)}\n//       )\n//       this.$http.get('http://demo.formater/geonetwork/srv/fre/info?type=me', {credentials:true, headers: headers}).then(\n//           response => {console.log(response.headers)}\n//       )\n      var self = this\n      // parameters according to depth\n      if (route.name === 'FormaterCatalogue') {\n     // if (depth === 0) {\n        // remove all parameters coming from step2 (normally there is not)\n        this.$store.state.gnParameters.step2.forEach(function (key) {\n          delete self.parameters[key]\n        })\n      }\n      if (route.name === 'Metadata') {\n     // if (depth > 0) {\n        // remove all parameters exlusivy reserve to step1\n        this.$store.state.gnParameters.step1.forEach(function (key) {\n          delete self.parameters[key]\n        })\n      }\n      \n      ['index', 'maxRecords', 'page'].forEach(function (key) {\n        delete self.parameters[key]\n      })\n    \n      if (this.parameters.sortBy === 'title') {\n        this.parameters.sortOrder = 'ordering'\n      } else {\n        delete this.parameters.sortOrder\n        // this.parameters.sortOrder = 'reverse'\n      }\n      if (route.name === 'FormaterCatalogue' && this.$store.state.group && !this.parameters._groupOwner) {\n        this.parameters._groupOwner = this.$store.state.group.join('+or+')\n      }\n      // this.$router.push({name: 'FormaterCatalogue', query:this.parameters})\n      // this.parameters.sortOrder =  this.parameters.sortBy === 'title' ? 'ordering': 'reverse';\n      var url = this.srv + 'q?' + Object.keys(this.parameters).map(function (prop) {\n        return prop + '=' + self.parameters[prop]\n      }).join('&');\n      this.$http.get(url, {headers: headers}).then(\n        response => { this.treatmentGeonetwork(response.body, 0);},\n        response => { this.treatmentError(response, url); })\n    },\n//     requestApiOpensearch (depth) {\n// \t\t  if (!this.api) {\n// \t\t    this.$store.commit('searchingChange', false)\n// \t\t    return\n// \t\t  }\n//       // var depth = (typeof this.parameters.depth != 'undefined') ? this.parameters.depth : this.depth\n//       var self = this\n//       var url = this.api + (this.api.indexOf('?') > 0 ? '&' :'?');\n//       // register parameters value\n//       url += Object.keys(this.parameters).map(function (prop) {\n//         return prop + '=' + self.parameters[prop]\n//       }).join('&');\n//       this.$emit('registerValues', {depth: depth, parameters: this.parameters})\n//      // this.$store.commit('addValueToParameters', this.parameters)\n//       this.$http.get(url).then(\n//           response => {   this.treatmentGeojson(response.body, depth);},\n//           response => { this.treatmentError(response, url); })\n//     },\n    treatmentError (response, url) {\n      switch(response.status) {\n      case 0:\n        this.$store.commit('setError', 'Maybe CORS ERROR, try with proxy')\n        break;\n      case 403:\n        this.$store.commit('setError', 'SERVER RESPONSE FOR ' + url + ' : ACCESS DENIED')\n        break;\n      case 404:\n        this.$store.commit('setError', 'SERVER RESPONSE FOR ' + url + ' : PAGE NOT FOUND')\n        break;\n      default:\n        this.$store.commit('setError', 'UNKNOWN ERROR FOR ' + url)\n      }\n      this.$store.commit('searchingChange', false)\n    },\n    treatmentGeojson (data, depth) {\n      var metadatas = {}\n      var self = this\n      var features = []\n      data.features.forEach( function (feature) {\n        feature.properties.id = feature.id\n        metadatas[feature.id] =  self.mapToGeonetwork(feature.properties)\n        features.push({type: feature.type, id: feature.id, geometry: feature.geometry})\n       \n      })\n      if (data.features.length === 0) {\n        metadatas = {}\n      }\n      if (data.properties) {\n        var properties = data.properties\n      } else {\n        var properties = data.description\n      }\n\n      this.fill({ type: 'opensearch', properties: data.properties, features: features, metadata:metadatas}, depth)\n      this.$store.commit('searchingChange', false)\n    },\n    treatmentGeonetwork (data, depth) {\n      var metadatas = {}\n      this.treatmentDimension(data.summary.dimension)\n      var features = []\n      var self = this\n      if (!data.metadata){\n        var metadatas = null\n      } else if (data.metadata && !data.metadata.forEach) {\n        var uuid = data.metadata['geonet:info'].uuid\n        metadatas[uuid] = self.$gn.treatmentMetadata(data.metadata ,uuid)\n        var feature = self.$gn.extractBbox(data.metadata.geoBox, uuid)\n        if (feature) {\n            features.push(feature)\n        }\n      } else {\n           data.metadata.forEach( function (meta, index) {\n             var uuid = meta['geonet:info'].uuid\n             metadatas[uuid] = self.$gn.treatmentMetadata(meta ,uuid)\n              var feature = self.$gn.extractBbox(meta.geoBox, uuid)\n              if (feature) {\n                    features.push(feature)\n              }\n           })\n      }\n      data.metadata = metadatas\n      data.type = 'geonetwork'\n      data.features = features\n      this.fill(data, depth)\n      this.$store.commit('searchingChange', false)\n      this.searchGnStep2Parameters(data.summary.dimension)\n      // this.searchRelated()\n    },\n    // remove groupOwner if only one group choose in app parameters\n    treatmentDimension (dimensions) {\n      if (this.$store.state.group.length === 1) {\n        if (!dimensions) {\n          dimensions = []\n        } else if (!Array.isArray(dimensions)) {\n          dimensions = [dimensions]\n        }\n        var find = dimensions.findIndex(function (dimension) {\n          return dimension['@name'] === 'groupOwner'\n        })\n        if (find >= 0) {\n          dimensions.splice(find, 1)\n        }\n      }\n    },\n    searchGnStep2Parameters (dimension) {\n      if (this.first) {\n        // register dimension in store\n        if (this.depth === 0) {\n          this.$store.commit('gnParametersChange', {step:1, dimension: dimension})\n        }\n        // this.$store.commit('gnParametersChange', {step:2, dimension:[]})\n        // search summary for all record (including child dataset) for step 2\n        if (this.$store.state.summaryType.step1 !== this.$store.state.summaryType.step2) {\n          \n          // var depth = (typeof this.parameters.depth != 'undefined') ? this.parameters.depth : this.depth\n          var headers =  {\n              'Accept': 'application/json, text/plain, */*',\n              'Accept-Language': this.$i18n.locale === 'fr' ? 'fre': 'eng'\n           }\n          var parameters = {\n              _content_type: 'json',\n              from:1,\n              to: 9,\n              type: 'dataset+or+series+or+publications',\n              resultType: this.$store.state.summaryType.step2\n          }\n          var url = this.srv + 'q?' + Object.keys(parameters).map(function (prop) {\n            return prop + '=' + parameters[prop]\n          }).join('&');\n          this.$http.get(url, {headers: headers}).then(\n            response => {  this.addGnParameters(response.body);}\n          )\n          this.first = false\n        }\n      }\n    },\n    addGnParameters(data) {\n      this.$store.commit('gnParametersChange', {step:2, dimension:data.summary.dimension})\n    },\n//     updateGeonetworkContacts (data) {\n//       data.responsibleParty.forEach( function (contact)  {\n//           var fields = contact.split('|');\n//           if (fields[1] === 'metadata' || fields[1] === 'metadonnées') {\n//            if (_this.contacts.metadata[fields[0]]){\n//              _this.contacts.metadata[fields[0]].push(fields)\n//            } else {\n//              _this.contacts.metadata[fields[0]] = [fields]\n//            }\n//           }else{\n//             if (_this.contacts.resource[fields[0]]){\n//                _this.contacts.resource[fields[0]].push(fields)\n//             } else {\n//                _this.contacts.resource[fields[0]] = [fields]\n//             }\n//           }\n                \n//       })\n//     },\n    mapToGeonetwork (properties) {\n      var properties = Object.assign({}, properties)\n      properties.fromOs = true\n      if (properties.productIdentifier) {\n        properties.renameProperty('productIdentifier', 'identifier')\n      }\n      if (properties.startDate) {\n        properties.renameProperty('startDate', 'tempExtentBegin')\n      }\n      if (properties.completionDate) {\n        properties.renameProperty('completionDate', 'tempExtentEnd')\n      }\n      if (properties.updated) {\n        properties.renameProperty('updated', 'revisionDate')\n      }\n      if (properties.published) {\n        properties.renameProperty('published', 'publicationDate')\n      }\n      if (properties.produced) {\n        properties.renameProperty('produced', 'creationDate')\n      }\n      if (!properties.type) {\n        properties.type = 'dataset'\n      }\n      if (properties.quicklook) {\n        properties.images = [['', properties.quicklook, '']]\n        delete properties.quicklook\n      }\n      if (properties.license) {\n       // properties.legalConstraints = [properties.license.licenseId]\n        delete properties.license\n      }\n      properties.osParameters = []\n      properties.mapping = []\n      if (properties.services) {\n        // @todo cas très très particulier de flatsim\n        if(properties.services.browse && properties.services.browse.layers) {\n          properties.layers = []\n          properties.services.browse.layers.forEach(function (flatsimLayer, index) {\n            var type =  flatsimLayer.type\n            var layer = {\n                id: properties.id + '_' + index,\n                name: flatsimLayer.name,\n                description:  flatsimLayer.name,\n                href: flatsimLayer.url,\n                type: flatsimLayer.type,\n                checked: false\n            }\n            properties.layers.push(layer)\n          })\n        }\n        if(properties.services.download && properties.services.download.url) {\n          if (!properties.download) {\n            properties.download = []\n          }\n          properties.download.push(properties.services.download)\n          \n        }\n        delete properties.services\n      }\n      if( !properties.exportLinks) {\n        properties.exportLinks = {}\n      }\n      // @todo Flatsim cas particulier des LIENS D'EXPORT qui se trouve dans link\n      if (properties.links) {\n        var i = properties.links.length\n        while (i--) {\n          if (properties.links[i].type === 'application/json' && !properties.exportLinks.json) {\n            properties.exportLinks.json = properties.links[i].href\n            properties.links.splice(i,1)\n          }\n          if (properties.links[i].type === 'application/xml' && !properties.exportLinks.xml) {\n            properties.exportLinks.xml = properties.links[i].href\n            properties.links.splice(i,1)\n          }\n        }\n        delete properties.links\n      }\n\n      if (!properties.contacts) {\n        properties.contacts = {metadata: {}, resource: {}}\n        if (properties.organisationName) {\n          if (typeof properties.organisationName === 'string') {\n            var responsible = new Array(10)\n            responsible[0] = 'Point of contact'\n            responsible[2] = properties.organisationName\n            properties.contacts.metadata['Point of contact'] = [responsible]\n            delete properties.organisationName\n          }\n        }\n      }\n     /* if (properties.keywords) {\n        properties.keywordGroup = {}\n        properties.keywords.forEach(function (keyword) {\n          if (!properties.keywordGroup[keyword.type]) {\n            properties.keywordGroup[keyword.type] = [{value: keyword.name}]\n          } else {\n            properties.keywordGroup[keyword.type].push({value: keyword.name})\n          }\n        })\n        delete properties.keywords\n      }*/\n      if (properties.keywords) {\n        properties.keyword = []\n        properties.keywords.forEach(function (keyword) {\n          properties.keyword.push(keyword.name)\n        })\n        delete properties.keywords\n      }\n      return properties\n    },\n    // @todo DEPLACER DANS FORM VOIR MÊME DANS formater-dimension-block/ formater-facet-block!!\n//     prepareFacet (e) {\n//       var facet = ''\n     \n//       for(var key in e.detail.facet) {\n//         if (e.detail.facet[key].length > 0) {\n//           if (facet === '') {\n//             facet = key +'/' + e.detail.facet[key]\n//           } else {\n//             facet += '&' + key + '/' + e.detail.facet[key]\n//           }\n//         }\n//       }\n//       if (facet !== '') {\n//        e.detail['facet.q'] = encodeURIComponent(facet)\n//        delete e.detail.facet\n//       }\n//       return e;\n//     },\n    fill (data, depth) {\n      data.depth = this.depth\n      var event = new CustomEvent('fmt:metadataListEvent', {detail:  data})\n      document.dispatchEvent(event)\n    },\n//     handleReset () {\n//       var event = new CustomEvent('aerisResetEvent', {detail: {}})\n//       document.dispatchEvent(event)\n//       this.getRecords({detail: {depth:event.detail.depth}})\n//     },\n//     changePage (event) {\n//       this.getRecords(event)\n//     },\n//     changeSearch (event) {\n//       this.parameters.any = event.target.value\n//       this.getRecords()\n//     }\n  }\n}\n</script>\n","import { render, staticRenderFns } from \"./formater-requester.vue?vue&type=template&id=7cd63dfd&\"\nimport script from \"./formater-requester.vue?vue&type=script&lang=js&\"\nexport * from \"./formater-requester.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import mod from \"-!../node_modules/@intlify/vue-i18n-loader/lib/index.js!../node_modules/vue-loader/lib/index.js??vue-loader-options!./formater-catalogue.vue?vue&type=custom&index=0&blockType=i18n\"; export default mod; export * from \"-!../node_modules/@intlify/vue-i18n-loader/lib/index.js!../node_modules/vue-loader/lib/index.js??vue-loader-options!./formater-catalogue.vue?vue&type=custom&index=0&blockType=i18n\"","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"mtdt-catalogue\"},[_c('div',[_vm._v(_vm._s(_vm.metaDisplayed))]),_vm._v(\" \"),_c('formater-requester',{attrs:{\"depth\":0}}),_vm._v(\" \"),_c('formater-draw-bbox'),_vm._v(\" \"),_c('div',[_c('div',{staticClass:\"mtdt-column-left\"},[_c('formater-form',{attrs:{\"disableLevel\":0,\"depth\":0}})],1),_vm._v(\" \"),_c('div',{staticClass:\"mtdt-column-right\"},[_c('div',{attrs:{\"id\":\"fmtLargeMap\"}}),_vm._v(\" \"),(_vm.$store.state.searching)?_c('div',{staticClass:\"fmt-waiting\"},[_c('div',[_vm._v(_vm._s(_vm.$t('searching'))),_c('br'),_c('span',{staticClass:\"fa fa-spinner animated\"})])]):_vm._e(),_vm._v(\" \"),(_vm.$store.state.error)?_c('div',{staticClass:\"fmt-error\"},[_c('div',[_c('span',{staticClass:\"fa fa-close fmt-close\",on:{\"click\":_vm.closeError}}),_vm._v(_vm._s(_vm.$store.state.error))])]):_vm._e(),_vm._v(\" \"),(_vm.$store.state.selectedMetadata)?_c('div',{staticClass:\"mtdt-free-capsule\"},[_c('div',[_c('formater-metadata',{attrs:{\"metadata\":_vm.$store.state.selectedMetadata,\"depth\":-1},on:{\"close\":function($event){return _vm.closeSingle()}}})],1)]):_vm._e(),_vm._v(\" \"),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.metadatas.length === 0),expression:\"metadatas.length === 0\"}]},[_c('formater-paging',{attrs:{\"depth\":0,\"orders\":['changeDate', 'popularity', 'title'],\"order-by\":_vm.sortBy}}),_vm._v(\" \"),_c('formater-list-metadata',{attrs:{\"depth\":0}})],1),_vm._v(\" \"),_c('div',_vm._l((_vm.metadatas),function(meta,index){return _c('formater-metadata',{directives:[{name:\"show\",rawName:\"v-show\",value:(index === _vm.metadatas.length-1),expression:\"index === metadatas.length-1\"}],key:index,attrs:{\"depth\":index + 1,\"metadata\":meta},on:{\"parametersChange\":_vm.setParameters,\"close\":_vm.close}})}),1)])])],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import mod from \"-!../node_modules/babel-loader/lib/index.js!../node_modules/vue-loader/lib/index.js??vue-loader-options!./formater-catalogue.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../node_modules/babel-loader/lib/index.js!../node_modules/vue-loader/lib/index.js??vue-loader-options!./formater-catalogue.vue?vue&type=script&lang=js&\"","/**\n * Main component\n */\n<i18n>{\n   \"en\":{\n     \"searching\": \"Searching\"\n   },\n   \"fr\":{\n     \"searching\": \"Recherche en cours\"\n   }\n}\n</i18n>\n<template>\n <div class=\"mtdt-catalogue\">\n <div>{{metaDisplayed}}</div>\n  <!-- components not visible  -->\n <formater-requester  :depth=\"0\" ></formater-requester>\n  <!-- component to draw bbox -->\n  <formater-draw-bbox ></formater-draw-bbox>\n\n  <div >\n   <!-- components can be view -->\n \n   <div class=\"mtdt-column-left\" >\n       <formater-form  :disableLevel=\"0\" :depth=\"0\"></formater-form>\n   </div>\n   <div class=\"mtdt-column-right\" >\n        <!-- div where append map when enlarge it -->\n        <div id=\"fmtLargeMap\"></div>\n        <!-- icon search -->\n        <div class=\"fmt-waiting\" v-if=\"$store.state.searching\"><div>{{$t('searching')}}<br /><span class=\"fa fa-spinner animated\"></span></div></div>\n        \n        <!--error msg -->\n        <div class=\"fmt-error\" v-if=\"$store.state.error\"><div><span class=\"fa fa-close fmt-close\" @click=\"closeError\"></span>{{$store.state.error}}</div></div>\n        \n        <!-- independant metadata -->\n        <div class=\"mtdt-free-capsule\" v-if=\"$store.state.selectedMetadata\" >\n          <div >\n            <formater-metadata :metadata=\"$store.state.selectedMetadata\" :depth=\"-1\" @close=\"closeSingle()\"></formater-metadata>\n          </div>\n        </div>\n        <!-- list of all records with page navigation -->\n        <div  v-show=\"metadatas.length === 0\">\n            <formater-paging   :depth=\"0\" :orders=\"['changeDate', 'popularity', 'title']\" :order-by=\"sortBy\"></formater-paging>\n            <formater-list-metadata :depth=\"0\"></formater-list-metadata>\n        </div>\n        \n        <!-- view of one record -->\n        <div>\n        <formater-metadata v-for=\"(meta, index) in metadatas\" :key=\"index\" v-show=\"index === metadatas.length-1\"\n         :depth=\"index + 1\" :metadata=\"meta\" @parametersChange=\"setParameters\"\n         @close=\"close\" ></formater-metadata>\n        </div>\n\n     </div>\n    </div>\n  </div>\n</template>\n<script>\nimport FormaterForm from './components/formater-form.vue';\nimport FormaterListMetadata from './components/formater-list-metadata.vue';\nconst FormaterMetadata = () => import('./components/formater-metadata.vue')\nimport FormaterPaging from './components/formater-paging.vue';\nimport FormaterDrawBbox from './components/formater-draw-bbox.vue';\nimport AerisTheme from 'aeris-commons-components-vjs/src/aeris-theme/aeris-theme.vue'\nimport FormaterRequester from './components/formater-requester.vue'\n\n// prevent previous and next page for browser\n// function disableBack() { window.history.forward() }\n// window.onload = function () {\n//   disableBack();\n// }\n//   window.onpageshow = function(evt) { if (evt.persisted) disableBack() }\n//   window.onbeforeunload = function() { return \"Your work will be lost.\"; };\nexport default {\n  name: 'FormaterCatalogue',\n  components: {\n    FormaterDrawBbox,\n    FormaterForm,\n    FormaterListMetadata,\n    FormaterMetadata,\n    FormaterPaging,\n    FormaterRequester,\n    AerisTheme\n  },\n \n  data() {\n    return {\n      currentUuid: null,\n      first: true,\n      sortBy: '',\n      metaDisplayed: null,\n      // bbox: null,\n      // depth: null,\n      // array breadcrumb of records\n      metadatas: [],\n      metadataListener: null,\n      drawing: false,\n      aerisSearchListener: null,\n      aerisResetListener: null,\n      backListener: null,\n      // default temporalExtent\n      temporalExtent: {min: '1900-01-01', max: 'now'}\n    }\n  },\n  watch: {\n    $route (newroute, old) {\n      if (newroute.query.sortBy) {\n        this.sortBy = newroute.query.sortBy\n      } else {\n        this.sortBy = this.$store.state.orderBy\n      }\n//       console.log(newroute)\n//       var oldDepth = old.query.depth ? old.query.depth : 0\n//       var newDepth = newroute.query.depth ? newroute.query.depth : 0\n//       if (newDepth < oldDepth) {\n//         this.back()\n//       } else if (newDepth > oldDepth && !this.currentUuid ){\n//        //  this.$router.replace({name: 'FormaterCatalogue', query:{}})\n//       }\n    }\n  },\n  created () {\n    if (this.$store.state.metadata && this.$route.name !== 'FormaterLogin') {\n      console.log('has metadata')\n      this.$router.replace({name: 'Metadata', params: {uuid: '0-serie'}})\n      return\n    }\n    // this.$router.push({name: 'FormaterCatalogue'})\n    if (this.$route.query.sortBy) {\n      this.sortBy = this.$route.query.sortBy\n    } else {\n      this.sortBy = this.$store.state.orderBy\n    }\n    \n    this.initTemporalExtent()\n   //  this.$gn.init(this.$i18n.locale, this.$store.state.geonetwork, this.$http, this.$store)\n//     this.metadataListener = this.receiveMetadata.bind(this)\n//     document.addEventListener('fmt:metadataEvent', this.metadataListener);\n//     this.aerisSearchListener = this.handleSearch.bind(this)\n//     document.addEventListener('aerisSearchEvent', this.aerisSearchListener)\n//     this.aerisResetListener = this.handleReset.bind(this)\n//     document.addEventListener('aerisResetEvent', this.aerisResetListener)\n    this.keydownListener = this.checkEscape.bind(this)\n    document.addEventListener('keydown', this.keydownListener)\n\n    // this.resize()\n\n//       var headers =  {\n//           'Accept': 'application/xml'\n//       }\n    \n//     this.$http.get('https://gravi165.step.univ-paris-diderot.fr/geonetwork/srv/api/0.1/records/86a28260-dc26-4b40-8433-9d06e9b9e628', {headers: headers})\n//     .then(resp => console.log(this.displayMeta(resp)))\n//     this.backListener = this.back.bind(this)\n//     window.addEventListener('beforeunload', this.backListener);\n  },\n  mounted () {\n//     var evt = new CustomEvent('fmt:pageChangedEvent')\n//     document.dispatchEvent(evt)\n    if (!this.$store.state.metadata) {\n      // this.$router.push({name: 'FormaterCatalogue', query: {}})\n    }\n    this.$store.commit('parametersChange', {parameters: [], mapping: [], type: null})\n  },\n  destroyed () {\n//     document.removeEventListener('fmt:metadataEvent', this.metadataListener);\n//     this.metadataListener = null;\n    document.removeEventListener('aerisSearchEvent', this.aerisSearchListener)\n    this.aerisSearchListener = null\n    document.removeEventListener('aerisResetEvent', this.aerisResetListener)\n    this.aerisResetListener = null\n\n//     window.removeEventListener('beforeunload', this.backListener);\n//     this.backListener = null\n  },\n  methods: {\n//     displayMeta(obj) {\n//       console.log(obj.body) \n//     },\n\n    initTemporalExtent () {\n      if(this.$store.state.temporalExtent && this.$store.state.temporalExtent.min) {\n        this.temporalExtent.min = this.$store.state.temporalExtent.min\n      }\n      if(this.$store.temporalExtent && this.$store.temporalExtent.max) {\n        this.temporalExtent.max = this.$store.temporalExtent.max\n      }\n    },\n    closeSingle () {\n      var event = new CustomEvent('fmt:closeMetadataEvent', {detail: {depth: 2}})\n      document.dispatchEvent(event)\n      this.$store.commit('resetSelectedMetadata')\n    },\n//     receiveMetadata (event) {\n//       if (this.$store.state.metadata && this.first) {\n//         this.first = false\n//         this.metadataUui = event.detail.meta.id\n//       }\n//       this.metadatas.push(event.detail.meta)\n//       this.currentUuid = event.detail.meta.id\n//       this.$store.commit('currentUuidChange', this.currentUuid)\n//       var min = null\n//       var max = null\n//       var numBegins = 0\n      \n//       if (typeof event.detail.meta.tempExtentBegin === 'string') {\n//         min = event.detail.meta.tempExtentBegin.substring(0, 10)\n//         numBegins = 1\n//       } else if (typeof event.detail.meta.tempExtentBegin === 'object') {\n//         var begins = event.detail.meta.tempExtentBegin.map(function (begin) { return begin.substring(0, 10)})\n//         begins.sort()\n//         min = begins[0]\n//         numBegins = begins.length\n//       } \n//       if (typeof event.detail.meta.tempExtentEnd === 'string' && numBegins === 1) {\n//         max = event.detail.meta.tempExtentEnd.substring(0, 10)\n//       } else if (typeof event.detail.meta.tempExtentEnd === 'object' && event.detail.meta.tempExtentEnd.length === numBegins) {\n//         var ended = event.detail.meta.tempExtentEnd.map(function(end) { return end.substring(0, 10)})\n//         ended.sort()\n//         max = ended[ended.length - 1]\n//       }\n//       var temp = {\n//           min: min ? min : this.temporalExtent.min,\n//           max: max ? max : this.temporalExtent.max\n//       }\n//       this.$store.commit('temporalChange', temp)\n//       this.$router.push({name: 'FormaterCatalogue', query:{uuid:event.detail.meta.id, depth: this.metadatas.length}})\n//     },\n    close () {\n      this.$router.go(-1)\n    },\n    back () {\n      //e.preventDefault()\n      if (this.$store.state.selectedMetadata) {\n        this.$store.commit('resetSelectedMetadata')\n      } else {\n        this.resetMetadata()\n      }\n    },\n    checkEscape (e) {\n        var event = e || window.event\n        var isEscape = false;\n        if (event.key) {\n          isEscape = (event.key === 'Escape' || event.key === 'Esc');\n        } else {\n          isEscape = (event.keyCode === 27);\n        }\n        if (isEscape) {\n           this.$router.go(-1)\n//          this.back()\n//           if (this.$store.state.selectedMetadata) {\n//             this.$store.commit('resetSelectedMetadata')\n//           } else {\n//             this.resetMetadata(e)\n//           }\n        }\n      },\n    resetMetadata () {\n      if (this.metadatas.length === 1 && this.metadatas[0].appRoot) {\n        return\n      }\n      if (this.metadatas.length > 0) {\n        this.metadatas.pop()\n      }\n      if (this.metadatas.length > 0) {\n\n        var metadata = this.metadatas[this.metadatas.length -1]\n        this.currentUuid = metadata.id\n        var type = metadata.disableType\n        var parameters = metadata.osParameters\n        var mapping = metadata.mapping\n        var min = null\n        var max = null\n        if (metadata.tempExtentBegin && metadata.tempExtentBegin.substring) {\n          min = metadata.tempExtentBegin.substring(0, 10)\n        }\n        if (metadata.tempExtentEnd && metadata.tempExtentEnd.substring) {\n          max = metadata.tempExtentEnd.substring(0, 10)\n        }\n        var temp = {\n            min: min ? min : this.temporalExtent.min,\n            max: max ? max : this.temporalExtent.madivx\n        }\n        this.$store.commit('temporalChange', temp)\n      } else {\n        this.currentUuid = null\n        var parameters = []\n        var mapping = []\n        var type = null\n        this.$store.commit('services/resetCurrent')\n        this.$store.commit('temporalChange', this.temporalExtent)\n      }\n\n      this.$store.commit('currentUuidChange', this.currentUuid)\n      this.$store.commit('parametersChange', {parameters: parameters, mapping: mapping, type: type})\n      var event = new CustomEvent('fmt:closeMetadataEvent', {detail:  {depth: this.metadatas.length }})\n      document.dispatchEvent(event)\n    },\n    setParameters (obj) {\n\n      if (obj.depth) {\n        this.metadatas[obj.depth - 1].osParameters = obj.osParameters\n        this.metadatas[obj.depth - 1].mapping = obj.mapping\n        this.metadatas[obj.depth - 1].disableType = obj.disableType\n      }\n      if (obj.depth === this.metadatas.length) {\n        this.$store.commit('parametersChange', {parameters: obj.osParameters, mapping: obj.mapping, type: obj.type})\n      }\n    },\n    registerValues (detail) {\n      if (detail.depth) {\n        this.metadatas[detail.depth - 1].osParameters.forEach( function (parameter) {\n          if (detail.parameters[parameter.name]) {\n            parameter.value = detail.parameters[parameter.name]\n          } else {\n            parameter.value = null\n          }\n        })\n      }\n    },\n\n//     handleReset (event) {\n//    this.$store.commit('resetSelectedMetadata')\n//      if (this.metadatas[0] && this.metadatas[0].appRoot) {\n\n//        event.detail.depth = 1\n//        var metadata = this.metadatas[0]\n//        this.metadatas = this.metadatas.slice(0, 1)\n//        this.currentUuid = this.metadatas[0].id\n//        this.metadatas.length = 1\n//        this.metadatas[0].osParameters.forEach(function (parameter) {\n//            parameter.value = null\n//        })\n//        var parameters = this.metadatas[0].osParameters\n//        var mapping = this.metadatas[0].mapping\n//        var type = this.metadatas[0].disableType\n//        var min = null\n//        var max = null\n//        if (metadata.tempExtentBegin) {\n//          min = metadata.tempExtentBegin.substring(0, 10)\n//        }\n//        if (metadata.tempExtentEnd) {\n//          max = metadata.tempExtentEnd.substring(0, 10)\n//        }\n//        var temp = {\n//            min: min ? min : this.temporalExtent.min,\n//            max: max ? max : this.temporalExtent.max\n//        }\n//        this.$store.commit('temporalChange', temp)\n//        this.$store.commit('currentUuidChange', this.currentUuid)\n//        this.$store.commit('parametersChange', {parameters: parameters, mapping: mapping, type: type})\n\n//      } else {\n//       event.detail.depth = 0\n//       this.metadatas = []\n//       this.metadatas.length = 0\n//       this.currentUuid = null\n//       this.$store.commit('currentUuidChange', this.currentUuid)\n//       this.$store.commit('parametersChange', {parameters: [], mapping: [], type: 'geonetwork'})\n//      }\n//     },\n//     handleSearch (event) {\n//       // mettre plutôt dans formater-metadata ??\n//       if (this.metadatas.length > 0) {\n//         event.detail.parentUuid = this.currentUuid\n//       }\n//     },\n    closeError () {\n      this.$store.commit('removeError')\n    }\n  }\n}\n</script>\n<style>\n\n\n</style>","import { render, staticRenderFns } from \"./formater-catalogue.vue?vue&type=template&id=01b72556&\"\nimport script from \"./formater-catalogue.vue?vue&type=script&lang=js&\"\nexport * from \"./formater-catalogue.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* custom blocks */\nimport block0 from \"./formater-catalogue.vue?vue&type=custom&index=0&blockType=i18n\"\nif (typeof block0 === 'function') block0(component)\n\nexport default component.exports"],"sourceRoot":""}